/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */

buildscript {
   ext {
      springBootVersion = '2.1.3.RELEASE'
   }
   repositories {
      mavenCentral()
   }
   dependencies {
      classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
   }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id "io.spring.dependency-management" version "1.0.7.RELEASE"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.jrl.springboot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'org.mockito', name: 'mockito-core', version: '2.13.0'
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-parent')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}
